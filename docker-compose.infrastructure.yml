services:
  # PostgreSQL with pgvector for primary database and vector storage
  postgres:
    image: pgvector/pgvector:pg16
    container_name: sprintlens-postgres
    environment:
      POSTGRES_DB: sprintlens
      POSTGRES_USER: sprintlens
      POSTGRES_PASSWORD: sprintlens_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations/postgres:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sprintlens -d sprintlens"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - sprintlens-network

  # MinIO for scalable object storage (S3-compatible)
  minio:
    image: minio/minio:latest
    container_name: sprintlens-minio
    environment:
      MINIO_ROOT_USER: sprintlens
      MINIO_ROOT_PASSWORD: sprintlens_minio_password
    ports:
      - "9000:9000"      # API
      - "9001:9001"      # Console
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - sprintlens-network

  # ClickHouse for analytics and metrics
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: sprintlens-clickhouse
    environment:
      CLICKHOUSE_DB: sprintlens_analytics
      CLICKHOUSE_USER: sprintlens
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
      CLICKHOUSE_PASSWORD: sprintlens_ch_password
    ports:
      - "8123:8123"      # HTTP
      - "9100:9000"      # Native
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./migrations/clickhouse:/docker-entrypoint-initdb.d
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8123/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - sprintlens-network

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: sprintlens-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --requirepass sprintlens_redis_password
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - sprintlens-network

  # Grafana for dashboards and monitoring
  grafana:
    image: grafana/grafana:latest
    container_name: sprintlens-grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: sprintlens_grafana_password
      GF_INSTALL_PLUGINS: grafana-clickhouse-datasource
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - clickhouse
      - postgres
    networks:
      - sprintlens-network

volumes:
  postgres_data:
  minio_data:
  clickhouse_data:
  redis_data:
  grafana_data:

networks:
  sprintlens-network:
    driver: bridge