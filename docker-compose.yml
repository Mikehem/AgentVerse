# Agent Lens Solution - Database Services
version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: agent_lens_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD:-agent_lens_root}
      MYSQL_DATABASE: agent_lens
      MYSQL_USER: agent_lens
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-agent_lens_pass}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - agent_lens_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: agent_lens_clickhouse
    restart: unless-stopped
    environment:
      CLICKHOUSE_DB: agent_lens
      CLICKHOUSE_USER: agent_lens
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-agent_lens_click}
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./database/clickhouse/init:/docker-entrypoint-initdb.d
    networks:
      - agent_lens_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8123/ping"]
      timeout: 20s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: agent_lens_redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-agent_lens_redis}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - agent_lens_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      timeout: 20s
      retries: 10

  # Optional: Database admin tools
  adminer:
    image: adminer:latest
    container_name: agent_lens_adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    networks:
      - agent_lens_network
    depends_on:
      - mysql
    profiles:
      - admin

  # Optional: Redis admin
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: agent_lens_redis_commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: local:redis:6379:0:${REDIS_PASSWORD:-agent_lens_redis}
    networks:
      - agent_lens_network
    depends_on:
      - redis
    profiles:
      - admin

volumes:
  mysql_data:
    driver: local
  clickhouse_data:
    driver: local
  redis_data:
    driver: local

networks:
  agent_lens_network:
    driver: bridge